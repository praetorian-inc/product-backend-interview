package praetorian.vulnviewer.vulnViewer.resources;

import lombok.NonNull;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import praetorian.vulnviewer.vulnViewer.dao.VulnerabilityDao;
import praetorian.vulnviewer.vulnViewer.dto.VulnerabilityDto;

import java.util.Set;
import java.util.UUID;

@RestController
@RequestMapping("/api/v1/vulnerability")
public class VulnerabilityResource {

  @NonNull VulnerabilityDao vulnerabilityDao;

  @GetMapping("{vulnerabilityId}")
  public VulnerabilityDto getVulnerability(@PathVariable @NonNull final UUID vulnerabilityId) {
    return vulnerabilityDao.getVulnerability(vulnerabilityId);
  }

  @GetMapping("project/{projectId}")
  public Set<VulnerabilityDto> getVulnerabilitiesForProject(@PathVariable @NonNull final UUID projectId) {
    return vulnerabilityDao.getVulnerabilitiesForProject(projectId);
  }

  @GetMapping("user/{userId}")
  public Set<VulnerabilityDto> getVulnerabilitiesForUser(@PathVariable @NonNull final UUID userId) {
    return vulnerabilityDao.getVulnerabilitiesForUser(userId);
  }

  @PutMapping("")
  public VulnerabilityDto upsertVulnerability(@RequestBody @NonNull final VulnerabilityDto vulnerabilityDto) {
    return vulnerabilityDao.upsertVulnerability(vulnerabilityDto);
  }
}
